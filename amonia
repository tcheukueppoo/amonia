#!/bin/sh

tcheukueppo='https://codeberg.org/tcheukueppo'
firacode='https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraCode.tar.xz'
vim_plug='https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
surf='https://git.suckless.org/surf'
package_manager=
webkit_version=

usage () {
   cat <<EOF >&2
Usage: amonia [-d|--docker] [-n|--nodejs]

Amonia is a toxic sh script which aims to setup a developement
environment for most of the programming langauges and technologies,
install and configure minimal tools and applications.

     -d, --docker  install docker and some other related packages
     -n, --nodejs  install node and some other related packages
EOF
   exit 1
}

die () {
   printf "%s\n" "$1" >&2
   exit 1
}

get_package_manager () {
   if command -v pacman ; then
     package_manager=pacman
   #elif ...
   fi
}

download_packages () {
   if [ $package_manager = pacman ] ; then
   
      sudo pacman -Syu man texinfo cronie pkgconf usb_modeswitch              \
        pulsemixer pulseaudio-equalizer pulseaudio-alsa pulseaudio-bluetooth   \
        bluez bluez-utils acpi alsa-utils psutils inetutils coreutils dash bc   \
        sed grep ack perl cpanm jq yq nawk tree lshw psmisc procps-ng sysstat    \
        e2fsprogs gptfdisk ntfs-3g hdparm dosfstools parted partclone xdg-utils   \
        ebtables dex fontconfig tar xz git gcc make usbutils                       \
   
        # st
        freetype2                                                                     \
        # slock
        imlib2                                                                          \
   
        feh zathura zathura-pdf-mupdf zathura-cb zathura-ps                               \
        xorg xorg-xinit xclip xss-lock xcape xorg-xmodmap                                  \
   
        # wayland sway swayidle wofi swaybg foot swaylock wl-clipboard
        # cups libglvnd sndio xournalpp xchm conky
   
        # netutils
        nmap xinetd bmon socat openssh openbsd-netcat macchanger tcpdump pdnsd                   \
        ddrescue vulscan ufw tcpreplay dnsmasq lsof tcpflow ipcalc sipcalc wget                   \
        curl whois networkmanager modemmanager dictd kismet reaver cowpatty                        \
   
        # misc
        htop nnn entr fzf tmux tmate vim scrot flameshot pdfgrep gnuplot w3m                          \
        firefox tesseract tesseract-data-afr tesseract-data-eng qemu                                   \
        
        # docs
        texlive-bin texlive-core pandoc                                                                   \
   
        # media utils
        ffmpeg imagemagick imagemagick-doc
          
      # surf
      webkit_version=`pacman -Ss webkit2gtk | sed -ne 's#extra/webkit2gtk-\([4-9]\.[1-9]\) .*#\1#p'`
      if test -n "$webkit_version" ; then
         sudo pacman -Syu gtk3 gcr webkit2gtk-$webkit_version
      fi

   else
      die "Unknown package manager."
   fi

   while $# -ne 0 ; do
      case $1 in
         --docker|-d)
            if [ $package_manager = pacman ] ; then
               sudo pacman -Syu libvirt vagrant docker aws-cli
            fi
            ;;
         --nodejs|-n)
            if [ $package_manager = pacman ] ; then
               sudo pacman -Syu nodejs ts-node npm yarn
            fi
            ;;
         *) usage ;;
      esac
      shift
   done
}

do_clone_build_install () {
   while [ 1 ] ; do
      if ! test -d $2 ; then
         rm -vf ./$2
         git clone --depth 1 "$1" || continue   
      fi
      if test -d $2 ; then
         if test $2 = surf && test -n $webkit_version ; then
            sed -i "s/webkit2gtk-[4-9]\.[1-9]/webkit2gtk-$webkit_version/g" config.mk
         fi
         cd -L $2              \
           && sudo make install \
           && make clean
         cd ..
         break
      fi
   done
}

# Clone, build and install custom software
clone_build_install () {
   mkdir -p ~/projects && cd ~/projects
   
   for r in kst kdwm ksent kdmenu kslock kslstatus amonia ktoolbox ; do
      do_clone_build_install "$tcheukueppo/$r" $r
   done
   do_clone_build_install "$surf" surf
}
   
# Configure fonts
setup_fonts () {
   mkdir -p ~/.local/share/fonts/firacode && cd ~/.local/share/fonts/firacode

   test -f FiraCode.tar.xz      \
     || wget "$firacode"         \
     && tar -xf FiraCode.tar.xz   \
     && fc-cache
}

misc_configs () { 
   if command -v systemctl >/dev/null ; then
      systemctl --user enable pulseaudio
      systemctl --user restart pulseaudio
      sudo hostnamectl hostname madjou
      sudo localectl set-keymap fr
      sudo timedatectl set-timezone Africa/Douala
      sudo systemctl enable systemd-timesyncd
   fi

   curl -fLo ~/.vim/autoload/plug.vim --create-dirs "$vim_plug"
   vim -c PlugInstall -c q -c q 
}

main () {
   #get_package_manager
   #download_packages
   #clone_build_install
   setup_fonts
   #misc_configs
}

main
